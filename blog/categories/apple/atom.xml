<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Apple | Jay McCarthy]]></title>
  <link href="http://jeapostrophe.github.com/blog/categories/apple/atom.xml" rel="self"/>
  <link href="http://jeapostrophe.github.com/"/>
  <updated>2012-09-27T15:17:18-06:00</updated>
  <id>http://jeapostrophe.github.com/</id>
  <author>
    <name><![CDATA[Jay McCarthy]]></name>
    <email><![CDATA[jay.mccarthy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Switching from OmniFocus to Org-Mode]]></title>
    <link href="http://jeapostrophe.github.com/blog/2012/09/19/omnifocus-and-org-mode/"/>
    <updated>2012-09-19T00:00:00-06:00</updated>
    <id>http://jeapostrophe.github.com/blog/2012/09/19/omnifocus-and-org-mode</id>
    <content type="html"><![CDATA[<p>One of my joys in life is keeping a TODO list and checking off
stuff. When I was young, I used plain text files mainly, but when I
got to graduate school, I used more automatic approaches.</p>


<p>In this post, I discuss my journey through various TODO list manager,
culminating in my switch from OmniFocus to Org-Mode.</p>


<!-- more -->


<p>My first foray into automated systems was a hand-written system called
&lt;a
href="http://planet.racket-lang.org/display.ss?package=grid.plt&amp;owner=jaymccarthy"&gt;The
Grid&lt;/a&gt;. This was a system for keeping track of your obedience to a
daily regime. Check out this &lt;a
href="http://planet.racket-lang.org/package-source/jaymccarthy/grid.plt/1/2/tour/index.html"&gt;tour&lt;/a&gt;
to see how it worked. You would add a list of things to do and then
there&rsquo;d be a box to check of every day. From my Grid in the tour, you
can see that mine were: Kiss Claire (my girlfriend at the time), Eat a
new meal, Wake up before 7am, Goto sleep before 11pm (I wasn&rsquo;t good at
that), Cardio-exercise, Weight training, SET (the card game), Shuffle
cards (I wanted to learn how to, so I practiced every day), Write
left-handed, Speak a foreign language, Write a foreign language, Read
a scientific paper, Program, Read literature, Dance!, Smell the
flowers, Talk to my family, and Pray.</p>


<p>This was awesome and I really enjoyed it.</p>


<p>Eventually, I wanted to keep track of more things, especially longer
term things, so I started using &lt;a
href="https://www.omnigroup.com/products/omnifocus/"&gt;OmniFocus&lt;/a&gt; for
the Mac. It was pretty awesome and I enjoyed it. Eventually when the
iPhone came out and I got one, I got it for the iPhone. But it was
pretty terrible on there, because the synchronization time was
unbearable for my huge list.</p>


<p>I switched to using OmniFocus instead of the Grid when I realized that
I could make tasks repeat on a daily basis, and then have
their "scheduled" time also repeat and be in the morning. This would
make it so that when I completed a task for Monday, it would repeat
again on Tuesday, but be hidden until then. Unfortunately, this made
the list bigger and bigger every day, because each completed task was
an entry in the OmniFocus database.</p>


<p>Nevertheless, I totally converted over to OmniFocus.</p>


<p>I enjoyed it for a while, but some things started to be very
annoying. The main one was that it was incredibly slow: Synchronizing
between my computers was slow, going from an item in Agenda mode to
its place in the TODO list was slow, searching was INCREDIBLY slow,
and there weren&rsquo;t enough keyboard commands.</p>


<p>I researched some other options and eventually decided to experiment
with switching to Org-Mode inside of Emacs.</p>


<p>The main thing to do was to make the interface look as much link
OmniFocus as possible. Most of the options built-in to Org-Mode
weren&rsquo;t good enough though, but there were two hooks that I could use:
the &lsquo;org-agenda-before-sorting-filter-function&lsquo; and
&lsquo;org-agenda-cmp-user-defined&lsquo;.</p>


<p>&lsquo;org-agenda-before-sorting-filter-function&lsquo; is run on all the items
that will be displayed on the agenda before they are sorted... as the
name suggests. I programmed mine to (a) remove "TODO" from the
displayed text, because otherwise they all would display it, (b) give
it a color based on when it was due modeled after the OmniFocus
colors, and (c) remove it if it was not passed the scheduled time. (c)
is important, because even though Org-Mode claims to have an option
that does this, it only looks at the scheduled /date/, not the
scheduled /time/.</p>


<p>&lsquo;org-agenda-cmp-user-defined&lsquo; is used to order them and you can&rsquo;t, by
default, order by the deadline, which I wanted.</p>


<p>Then, I made it so the keybinding I use to view the TODO list (from
anywhere in Emacs) automatically starts column mode and the column
format hides everything except the deadline.</p>


<p>This has solved every problem I had with OmniFocus: it does everything
the same but is lightning fast.</p>


<p>There&rsquo;s one feature it doesn&rsquo;t have that I like, but that I&rsquo;ve worked
around. OmniFocus has parallel and ordered task lists, but Org-Mode
only has parallel. This just means duplicating some deadlines.</p>


<p>There&rsquo;s a feature that neither have, but with Org-Mode I can add it
myself: the ability to skip the weekend for daily repeating tasks. I
hope to do this eventually, but I don&rsquo;t have it yet.</p>


<p>You can see my Org-Mode customization starting on &lt;a
href="https://github.com/jeapostrophe/exp/blob/master/.emacs.el#L518"&gt;L518
on Github&lt;/a&gt;.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux on a MacBook Air and Nvidia Projector Woes]]></title>
    <link href="http://jeapostrophe.github.com/blog/2012/09/10/nvidia-macbook-air-linux/"/>
    <updated>2012-09-10T00:00:00-06:00</updated>
    <id>http://jeapostrophe.github.com/blog/2012/09/10/nvidia-macbook-air-linux</id>
    <content type="html"><![CDATA[<p>When I was quite young, in middle school, I switched from Windows to
Linux. I initially used Red Hat, but fairly quickly converted to
Debian. Eventually, when OS X first came out I was very excited and
switched to the Mac for my personal machines.</p>


<p>However, more recently, OS X has been becoming less and less Unix-like
and my tastes for Apple-ism having been reduce, so in December (after
classes were over), I switched back to Linux. First, I used Ubuntu and
then I switched to Arch.</p>


<p>However, running Linux on a laptop can be exciting, and a MacBook Air
with an Nvidia graphics card is particularly exciting. I had a brutal
problem with my projector setup, but I found the solution. In this
post, I lay out my tale of woe.</p>


<!-- more -->


<p>Since it&rsquo;s September again, it is time to teach class and I need to
project from my laptop. I&rsquo;d been using multiple displays for a long
time with my Mac (I have an external screen in my office), so I
presumed that I had everything working correctly.</p>


<p>I use &lt;a href="http://willem.engen.nl/projects/disper/"&gt;disper&lt;/a&gt; to
manage my display configurations. From Linux&rsquo;s perspective, my Air has
three displays: DFP-0 (the external display when it is connected with
DVI), DFP-1 (the external display when it is connected with VGA), and
DFP-2 (the built-in screen.) So I assumed it would be as simple as
typing &lsquo;disper -c&lsquo; after connecting to clone my desktop across the two
displays.</p>


<p>Unfortunately, I got the error message: "Displays do not share a
common resolution". That&rsquo;s strange, I think, I distinctly remember
using these projectors last year, on OS X and getting a decently sized
screen (1024x768, I believe.) A quick &lsquo;disper -l&lsquo; reveals that my
DFP-1 only has one resolution: "640x480".</p>


<p>This was right before class, so I just used that resolution only on
the projector and looked up at the screen when I needed to. Ugly, but
workable.</p>


<p>The next day I read all about XRandr and how you can add video modes
using &lsquo;gtf&lsquo; and &lsquo;xrandr&lsquo; and thought I had everything figured
out. When I went to connect again during a day I didn&rsquo;t teach, I had
an unbearable time of getting tons and tons of error messages and no
success.</p>


<p>I dealt with the small screen in class for a second day.</p>


<p>After that, I decided that I would connect with OS X on my laptop and
write down which video modes, resolutions, refresh rates, etc it could
handle so I could pass the correct arguments to &lsquo;gtf&lsquo;. I was delighted
when I realized I&rsquo;d be able to run the projector at 1400x1050 and my
laptop screen at 1440x900 and have them share a 1400x900 desktop. This
wasn&rsquo;t the default in OS X, but it was an option.</p>


<p>Booting back to Linux, I had a harrowing experience trying to override
the X server settings to get this mode enabled. Nothing.</p>


<p>At this point, I realized that I originally chose &lsquo;disper&lsquo; rather than
&lsquo;xrandr&lsquo; because Nvidia cards haven&rsquo;t always fully supported &lsquo;xrandr&lsquo;,
but used another "meta mode" system instead. I decided to use a meta
mode:</p>


<p>&lsquo;nvidia-settings &ndash;assign CurrentMetaMode="DFP-2: 1440x900 { ViewPortIn=1400x900, ViewPortOut=1400x900+20+0 }, DFP-1: 1400x1050 { ViewPortIn=1400x900, ViewPortOut=1400x900+0+75 }"&lsquo;</p>


<p>Unfortunately, this failed too, and would sometimes crash my X
server. But I was able to at least mirror the screen on the projector
on my laptop, but it was a small resolution (640x480) and it was
unscaled on my computer, so it was a tiny little box:</p>


<p>&lsquo;nvidia-settings &ndash;assign CurrentMetaMode="DFP-2: 1440x900 { ViewPortIn=640x480, ViewPortOut=640x480+400+210 }, DFP-1: 640x480 { ViewPortIn=640x480, ViewPortOut=640x480+0+0 }"&lsquo;</p>


<p>But I continued to try...</p>


<p>I inspected the logs and found that I got the error message "Unable to
read EDID for display device DFP-1". A quick run to Wikipedia told me
that EDID is the format for giving the valid display frequencies for
devices... so maybe OS X was reading it correctly but Linux wasn&rsquo;t?</p>


<p>I found an OS X app that would save EDID data and saved mine for the
projector (after booting into OS X.) Unfortunately after parsing it,
it said that it was fake data and that actually the EDID couldn&rsquo;t be
read. Defeated again.</p>


<p>This was a fruitful path though, because it made me discover the
&lsquo;ModeValidation&lsquo; option in my X config where I could add
&lsquo;AllowNonEdidModes&lsquo; so that the X server wouldn&rsquo;t insist on only using
modes that were given by the EDID block.</p>


<p>Failure.</p>


<p>Next, I tried to turn off other checks on valid modes:</p>


<p>&lsquo;NoHorizSyncCheck&lsquo;</p>


<p>Failure.</p>


<p>&lsquo;NoVertRefreshCheck&lsquo;</p>


<p>Failure.</p>


<p>&lsquo;NoDFPNativeResolutionCheck&lsquo;</p>


<p>Failure.</p>


<p>I had almost given up. I decided to read through the entire Nvidia X
configuration manual and I discovered the &lsquo;ModeDebug&lsquo; option that
would give detailed reasons for why certain modes were not allowed. I
turned that on, restarted X, and tried to use the big resolution...</p>


<p>The error message was "pixel clock exceeds maximum EDID pixel
clock". I don&rsquo;t know what a pixel clock is, but I looked in the manual
and found another mode validation override:</p>


<p>&lsquo;NoEdidMaxPClkCheck&lsquo;</p>


<p>Success.</p>


<p>Now, I can use my projector at the full resolution. And it&rsquo;s
beautiful.</p>


<p>It&rsquo;s days like this that make you proud to be a Linux user. I&rsquo;ve
subdued the computer and made it do exactly what I want. It feels
glorious.</p>


<p>The only remaining problems I have with the laptop are... the
microphone doesn&rsquo;t work and sometimes (maybe once every three weeks)
the X server will segfault, normally right after coming back from
sleep. This last thing is the worst because there&rsquo;s no way to reset
the video settings, so I have to reboot. The saga will continue...</p>

]]></content>
  </entry>
  
</feed>
